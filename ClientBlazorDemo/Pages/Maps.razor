@page "/maps"
@using GoogleMapsComponents
@using GoogleMapsComponents.Maps

<h1>Maps</h1>

<GoogleMap ref="@map1" Id="map1" Options="@mapOptions"></GoogleMap>
<GoogleMap ref="@map2" Id="map2" Options="@mapOptions2"></GoogleMap>

<button onclick="@SyncBounds">Sync map bounds</button>
<button onclick="@SyncMapCenter">Sync map center</button>
<button onclick="@SetMapHeading">Set map heading</button>
<button onclick="@ToggleMapType">Toggle map type</button>
<button onclick="@ToggleTilt">Toggle map tilt</button>
<button onclick="@ZoomIn">Zoom in</button>

@functions {
    private GoogleMap map1;
    private GoogleMap map2;

    private MapOptions mapOptions;
    private MapOptions mapOptions2;

    protected override void OnInit()
    {
        mapOptions = new MapOptions()
        {
            Zoom = 13,
            Center = new LatLngLiteral()
            {
                Lat = 13.505892,
                Lng = 100.8162
            },
            MapTypeId = MapTypeId.Roadmap
        };

        mapOptions2 = new MapOptions()
        {
            Zoom = 18,
            Center = new LatLngLiteral()
            {
                Lat = 45.518,
                Lng = -122.672
            },
            MapTypeId = MapTypeId.Sattellite,
            Heading = 90,
            Tilt = 45
        };
    }

    private async Task SyncBounds()
    {
        var bounds = await map1.GetBounds();
        await map2.FitBounds(bounds);
    }

    private async Task SyncMapCenter()
    {
        var latLng = await map1.GetCenter();
        await map2.SetCenter(latLng);
    }

    private async Task SetMapHeading()
    {
        await map2.SetHeading(await map2.GetHeading() + 90);
        var heading = await map2.GetHeading();

        Console.WriteLine($"Map2 heading is {heading}");
    }

    private async Task ToggleTilt()
    {
        var tilt = await map2.GetTilt();

        Console.WriteLine($"Map2 tilt is {tilt}");

        if (tilt > 0)
        {
            await map2.SetTilt(0);
        }
        else
        {
            await map2.SetTilt(45);
        }
    }

    private async Task ZoomIn()
    {
        var zoom = await map1.GetZoom();
        await map1.SetZoom(zoom + 1);
    }

    private async Task ToggleMapType()
    {
        var mapTypeId = await map1.GetMapTypeId();

        Console.WriteLine($"Map type is {mapTypeId}");

        if (mapTypeId != MapTypeId.Sattellite)
        {
            await map1.SetMapTypeId(MapTypeId.Sattellite);
        }
        else
        {
            await map1.SetMapTypeId(MapTypeId.Roadmap);
        }
    }
}