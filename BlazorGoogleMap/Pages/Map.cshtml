@page "/map"
@using SharedComponents
@using SharedComponents.Maps

<h1>Google Map</h1>

<GoogleMap ref="@map1" Id="map1" Options="@mapOptions"></GoogleMap>
<GoogleMap ref="@map2" Id="map2" Options="@mapOptions2"></GoogleMap>

<button onclick="@SyncBounds">Sync map bounds</button>
<button onclick="@SyncMapCenter">Sync map center</button>
<button onclick="@SetMapHeading">Set map heading</button>
<button onclick="@ToggleMapType">Toggle map type</button>

@functions {
    private GoogleMap map1;
    private GoogleMap map2;

    private MapOptions mapOptions;
    private MapOptions mapOptions2;

    protected override void OnInit()
    {
        mapOptions = new MapOptions()
        {
            zoom = 13,
            center = new LatLngLiteral()
            {
                lat = 13.505892,
                lng = 100.8162
            },
            mapTypeId = MapTypeId.Roadmap
        };

        mapOptions2 = new MapOptions()
        {
            zoom = 13,
            center = new LatLngLiteral()
            {
                lat = 13.505892,
                lng = 100.8162
            },
            mapTypeId = MapTypeId.Sattellite,
            heading = 45
        };
    }

    private async Task SyncBounds()
    {
        var bounds = await map1.GetBounds();
        await map2.FitBounds(bounds);
    }

    private async Task SyncMapCenter()
    {
        var latLng = await map1.GetCenter();
        await map2.SetCenter(latLng);
    }

    private async Task SetMapHeading()
    {
        await map2.SetHeading(90);
        var heading = await map2.GetHeading();

        Console.WriteLine($"Map2 heading is {heading}");
    }

    private async Task ToggleMapType()
    {
        var mapTypeId = await map1.GetMapTypeId();

        Console.WriteLine($"Map type is {mapTypeId}");

        if(mapTypeId != MapTypeId.Sattellite)
        {
            await map1.SetMapTypeId(MapTypeId.Sattellite);
        }
        else
        {
            await map1.SetMapTypeId(MapTypeId.Roadmap);
        }
    }
}