@page "/mapEvent"
@using SharedComponents
@using SharedComponents.Maps

<h1>Google Map Event</h1>

<GoogleMap ref="@map1" Id="map1" Options="@mapOptions" 
    OnBoundsChanged="@OnBoundsChanged"
    OnCenterChanged="@OnCenterChanged"
    OnClick="@OnClick"
    OnDoubleClick="@OnDoubleClick"
    OnDrag="@OnDrag"
    OnDragEnd="@OnDragEnd"
    OnDragStart="@OnDragStart"
    OnHeadingChanged="@OnHeadingChanged"
    OnIdle="@OnIdle"
    OnMapTypeIdChanged="@OnMapTypeIdChanged"
    OnMouseMove="@OnMouseMove"
    OnMouseOut="@OnMouseOut"
    OnMouseOver="@OnMouseOver"
    OnProjectionChanged="@OnProjectionChanged"
    OnRightClick="@OnRightClick"
    OnTilesLoaded="@OnTilesLoaded"
    OnZoomChanged="@OnZoomChanged"
>
</GoogleMap>

<MapEventList ref="@eventList" Events="@_events"></MapEventList>

@functions {
    private GoogleMap map1;
    private MapEventList eventList;

    private MapOptions mapOptions;

    private List<String> _events = new List<String>();

    protected override void OnInit()
    {
        mapOptions = new MapOptions()
        {
            zoom = 13,
            center = new LatLngLiteral()
            {
                lat = 13.505892,
                lng = 100.8162
            },
            mapTypeId = MapTypeId.Roadmap
        };
    }

    private void OnBoundsChanged()
    {
        Console.WriteLine("Bounds changed.");

        _events.Insert(0, "Bounds changed.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnCenterChanged()
    {
        Console.WriteLine("Center changed.");

        _events.Insert(0, "Center changed.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnClick()
    {
        Console.WriteLine("Click.");

        _events.Insert(0, "Click.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnDoubleClick()
    {
        Console.WriteLine("Double click.");

        _events.Insert(0, "Double click.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnDrag()
    {
        Console.WriteLine("Drag.");

        _events.Insert(0, "Drag.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnDragEnd()
    {
        Console.WriteLine("Drag end.");

        _events.Insert(0, "Drag end.");

        StateHasChanged();
    }

    private void OnDragStart()
    {
        Console.WriteLine("Drag start.");

        _events.Insert(0, "Drag start.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnHeadingChanged()
    {
        Console.WriteLine("Heading changed.");

        _events.Insert(0, "Heading changed.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnIdle()
    {
        Console.WriteLine("Idle.");

        _events.Insert(0, "Idle.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnMapTypeIdChanged()
    {
        Console.WriteLine("OnMapTypeIdChanged.");

        _events.Insert(0, "OnMapTypeIdChanged.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnMouseMove()
    {
        Console.WriteLine("OnMouseMove.");

        _events.Insert(0, "OnMouseMove.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnMouseOut()
    {
        Console.WriteLine("OnMouseOut.");

        _events.Insert(0, "OnMouseOut.");
        _events = _events.Take(100).ToList();

        StateHasChanged();
    }

    private void OnMouseOver()
    {
        Console.WriteLine("OnMouseOver.");

        _events.Insert(0, "OnMouseOver.");

        StateHasChanged();
    }

    private void OnProjectionChanged()
    {
        Console.WriteLine("OnProjectionChanged.");

        _events.Insert(0, "OnProjectionChanged.");

        StateHasChanged();
    }

    private void OnRightClick()
    {
        Console.WriteLine("OnRightClick.");

        _events.Insert(0, "OnRightClick.");

        StateHasChanged();
    }

    private void OnTilesLoaded()
    {
        Console.WriteLine("OnTilesLoaded.");

        _events.Insert(0, "OnTilesLoaded.");

        StateHasChanged();
    }

    private void OnZoomChanged()
    {
        Console.WriteLine("OnZoomChanged.");

        _events.Insert(0, "OnZoomChanged.");

        StateHasChanged();
    }
}
